basePath: /
definitions:
  envs.EnvVariables:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  envs.OverwriteEnvVariablesReq:
    properties:
      variables:
        items:
          $ref: '#/definitions/envs.EnvVariables'
        type: array
    type: object
  project.DeploymentStatus:
    enum:
    - ready
    - failed
    - building
    - done
    - none
    type: string
    x-enum-varnames:
    - Ready
    - Failed
    - Building
    - Done
    - None
  project.EnvVariable:
    properties:
      key:
        type: string
      projectID:
        type: string
      value:
        type: string
    type: object
  project.GenericProjectResp:
    properties:
      createdAt:
        type: string
      deploymentStatus:
        $ref: '#/definitions/project.DeploymentStatus'
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  projects.CreateProjectRequest:
    properties:
      name:
        type: string
    type: object
  projects.ProjectApiResponse:
    properties:
      createdAt:
        type: string
      deploymentStatus:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  projects.UpdateProjectRequest:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
host: localhost:1323
info:
  contact: {}
  description: This is a server for  pulsar (serverless web platform) server.
  title: Pulsar API
  version: "1.0"
paths:
  /:
    get:
      operationId: exec-app
      responses: {}
      summary: test serverless function
      tags:
      - App
  /api/projects:
    get:
      consumes:
      - application/json
      operationId: get-projects
      parameters:
      - description: Page number
        in: query
        name: pageNumber
        required: true
        type: integer
      - description: Page size
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.GenericProjectResp'
      security:
      - Bearer: []
      summary: Get projects
      tags:
      - Project
    post:
      consumes:
      - application/json
      operationId: create-project
      parameters:
      - description: create project DTO
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/projects.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.GenericProjectResp'
      security:
      - Bearer: []
      summary: Create project
      tags:
      - Project
  /api/projects/{id}:
    delete:
      consumes:
      - application/json
      operationId: delete-project
      parameters:
      - description: project id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: Delete project
      tags:
      - Project
    get:
      consumes:
      - application/json
      operationId: get-project
      parameters:
      - description: project id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/projects.ProjectApiResponse'
      security:
      - Bearer: []
      summary: Get project
      tags:
      - Project
    put:
      consumes:
      - application/json
      operationId: update-project
      parameters:
      - description: create project DTO
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/projects.UpdateProjectRequest'
      - description: project id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.GenericProjectResp'
      security:
      - Bearer: []
      summary: Update project
      tags:
      - Project
  /api/projects/code/{projectId}:
    get:
      consumes:
      - application/json
      operationId: download-project
      parameters:
      - description: project id
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: Download project
      tags:
      - Project
    put:
      consumes:
      - application/json
      operationId: upload-project-code
      parameters:
      - description: project id
        in: path
        name: projectId
        required: true
        type: string
      - description: zipped code
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: Upload project
      tags:
      - Project
  /api/projects/envs/{projectId}:
    get:
      consumes:
      - application/json
      operationId: get-env-variables
      parameters:
      - description: project id
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.EnvVariable'
            type: array
      security:
      - Bearer: []
      summary: Get Environmental Variables
      tags:
      - Env
    post:
      consumes:
      - application/json
      operationId: create-env-variables
      parameters:
      - description: project id
        in: path
        name: projectId
        required: true
        type: string
      - description: Create env variables
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/envs.OverwriteEnvVariablesReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.EnvVariable'
            type: array
      security:
      - Bearer: []
      summary: Create Environmental Variables
      tags:
      - Env
  /api/projects/logs/{projectId}:
    get:
      consumes:
      - application/json
      operationId: get-project-log
      parameters:
      - description: project id
        in: path
        name: projectId
        required: true
        type: string
      - description: Page number
        in: query
        name: pageNumber
        required: true
        type: integer
      - description: Page size
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - Bearer: []
      summary: Get Project log
      tags:
      - Log
  /app/status:
    post:
      consumes:
      - application/json
      operationId: app-status
      parameters:
      - description: App subdomain
        in: query
        name: subdomain
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: update serverless app status
      tags:
      - App
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
